@model IEnumerable<WebApplicationMvc.ViewModels.Maestro.MaestroListItemViewModel>

<div class="row">
    <div class="col-12">
        <a class="btn btn-primary float-right" asp-controller="Maestro" asp-action="Create">Crear</a>
    </div>
</div>

<form asp-controller="Maestro" asp-action="Index" method="get">
    <div class="row">
        <div class="col-8">
            <div class="form-group row">
                <label for="" class="col-sm-5 col-form-label">Buscar tipo</label>
                <div class="col-sm-7">

                    @{
                        var enumSelected = (PruebaEnum?) ViewData["pruebaEnum"];
                        var selectList = new List<SelectListItem>();

                        if (enumSelected.HasValue && enumSelected == PruebaEnum.Valor1)
                        {
                            selectList.Add(new SelectListItem("Valor1", "0", selected: true));
                        }
                        else
                        {
                            selectList.Add(new SelectListItem("Valor1", "0"));
                        }

                        if (enumSelected.HasValue && enumSelected == PruebaEnum.Valor2)
                        {
                            selectList.Add(new SelectListItem("Valor2", "1", selected: true));
                        }
                        else
                        {
                            selectList.Add(new SelectListItem("Valor2", "1"));
                        }

                        if (enumSelected.HasValue && enumSelected == PruebaEnum.Valor3)
                        {
                            selectList.Add(new SelectListItem("Valor3", "2", selected: true));
                        }
                        else
                        {
                            selectList.Add(new SelectListItem("Valor3", "2"));
                        }

                        if (enumSelected == null)
                        {
                            selectList.Add(new SelectListItem("Todos", "", selected: true));
                        }
                        else
                        {
                            selectList.Add(new SelectListItem("Todos", ""));
                        }

                    }

                    <select name="pruebaEnum" class="form-control" asp-items="selectList">
                    </select>

                </div>
            </div>
        </div>
        <div class="col-2">
            <button type="submit" class="btn btn-success">Buscar</button>
        </div>
    </div>


    <div class="row">
        <div class="col-8">
            <div class="form-group row">
                <label for="" class="col-sm-5 col-form-label">Buscar booleano</label>
                @{
                    var booleano = (bool?) ViewData["booleano"];
                }
                <div class="col-sm-3">
                    <div class="form-check form-check-inline">
                        
                        @if (booleano == null)
                        {
                            <input class="form-check-input" type="radio" name="booleano" id="inlineRadio1" value="" checked>                        
                        }
                        else
                        {
                            <input class="form-check-input" type="radio" name="booleano" id="inlineRadio1" value="">
                        }
                        
                        <label class="form-check-label" for="inlineRadio1">Todos</label>
                    </div>
                    <div class="form-check form-check-inline">
                        @if (booleano.HasValue && booleano == true)
                        {
                            <input class="form-check-input" type="radio" name="booleano" id="inlineRadio2" value="true" checked>
                        }
                        else
                        {
                            <input class="form-check-input" type="radio" name="booleano" id="inlineRadio2" value="true">                            
                        }

                        <label class="form-check-label" for="inlineRadio2">Activo</label>
                    </div>
                    <div class="form-check form-check-inline">
                        @if (booleano.HasValue && booleano == false)
                        {
                            <input class="form-check-input" type="radio" name="booleano" id="inlineRadio3" value="false" checked>   
                        }
                        else
                        {
                            <input class="form-check-input" type="radio" name="booleano" id="inlineRadio3" value="false">                            
                        }
                        <label class="form-check-label" for="inlineRadio3">Desactivo</label>
                    </div>

                </div>
            </div>
        </div>
        <div class="col-2">
            <button type="submit" class="btn btn-success">Buscar</button>
        </div>
    </div>

    <div class="row">
        <div class="col-8">
            <div class="form-group row">
                <label for="" class="col-sm-5 col-form-label">Buscar por cantidad detalles</label>
                <div class="col-sm-3">
                    <input type="number"
                           name="cantidadDetalle"
                           class="form-control"
                           value="@ViewData["cantidadDetalle"]"
                           placeholder="Cantidad">
                </div>
            </div>
        </div>
        <div class="col-2">
            <button type="submit" class="btn btn-success">Buscar</button>
        </div>
    </div>
    
</form>

<div class="row my-4">
    <div class="col-12">
        <table class="table table-bordered table-sm">
            <thead>
            <tr>
                <th>Id</th>
                <th>Entero nullable</th>
                <th>Flotante nullable</th>
                <th>Enum nullable</th>

                <th>Cadena nullable</th>
                <th>Fecha creacion</th>
                <th>Booleano def val</th>
                <th>Enum</th>
                <th>Cantidad detalle</th>
                <th>Opciones</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(a => item.Id)
                    </td>
                    <td>
                        @Html.DisplayFor(a => item.Entero)
                    </td>
                    <td>
                        @Html.DisplayFor(a => item.Flotante)
                    </td>
                    <td>
                        @Html.DisplayFor(a => item.Enum)
                    </td>

                    <td>
                        @Html.DisplayFor(a => item.Cadena)
                    </td>
                    <td>
                        @Html.DisplayFor(a => item.FechaCreacion)
                    </td>
                    <td>
                        @Html.DisplayFor(a => item.Booleano)
                    </td>

                    <td>
                        @Html.DisplayFor(a => item.Enum)
                    </td>

                    <td>
                        @Html.DisplayFor(a => item.CantidadDetalles)
                    </td>
                    <td>
                        @* Ejemplo de mustra de controles segun roles *@
                        <a class="btn btn-success btn-sm" asp-controller="Maestro" asp-action="Edit" asp-route-id="@item.Id">Editar</a>
                        @if (User.IsInRole(Rol.Admin))
                        {
                            <a class="btn btn-danger btn-sm" asp-controller="Maestro" asp-action="ShowForDelete" asp-route-id="@item.Id">Eliminar</a>
                        }
                        @if (User.IsInRole(Rol.Usuario))
                        {
                            <a class="btn btn-info btn-sm" asp-controller="Maestro" asp-action="ShowDetails" asp-route-id="@item.Id">Detalle</a>
                        }
                    </td>

                </tr>
            }
            </tbody>
        </table>
    </div>
</div>